
1. Install Django
py -m pip install Django

2. Start new project

python django-admin.py startproject mysite

3. Start Django http server

python manage.py runserver

cd D:\GoogleDrive\my_github\GitHub\gotolong\src-django-proj-root

cd d:/GoogleDrive/my_github/GitHub/gotolong/src-django-proj-root

d:

python manage.py runserver


D:\GoogleDrive\my_github\GitHub\gotolong\src\django-proj-root>python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
February 08, 2020 - 14:58:21
Django version 3.0.1, using settings 'mysite.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.


4. Steps to add a new add

4.1> python manage.py startapp amfi

It will create amfi directory with several files.

4.2> Add entry of the new app to mysite/settings.py

INSTALLED_APPS = []

4.3> For the table to be visible on admin site

<app>/admin.py : register model
admin.site.register()

Example :
admin.site.register(Amfi)


5. create special tables for admin :  python manage.py migrate

D:\GoogleDrive\my_github\GitHub\gotolong\src\mysite>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying sessions.0001_initial... OK

6. python manage.py createsuperuser


Login/Password: admin/admin

D:\GoogleDrive\my_github\GitHub\gotolong\src\mysite>python manage.py createsuperuser
Username (leave blank to use 'surikuma'): admin
Email address: admin
Error: Enter a valid email address.
Email address: surinder.meena@gotolong.com
Password:
Password (again):
The password is too similar to the username.
This password is too short. It must contain at least 8 characters.
This password is too common.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

D:\GoogleDrive\my_github\GitHub\gotolong\src\mysite>


7. Exception Value:

(1054, "Unknown column 'demat_summary.id' in 'field list'")


add either id field as a primary key
or
add primary_key=True to an existing model.


replaced (blank=True,null=True) with (primary_key=True)


8.





9. migrations

 python mnaage.py makemigrations
 pythong manage.py migrate

10.

python manage.py collectstatic

11. Django debug

import pdb; pdb.set_trace()
or

breakpoint()  #from Python3.7


12. naturaltime in templates

To activate these filters, add 'django.contrib.humanize' to your INSTALLED_APPS setting.
Once you’ve done that,  use {% load humanize %} in a template, and you’ll have access
to the following filter

12. bootstrap in django templates

https://www.fullstackpython.com/blog/bootstrap-4-django-template.html

13. Disabled validators to allow guest/welcome

'''
# disabled auth and password validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
'''

14. plots using plotly
https://www.codingwithricky.com/2019/08/28/easy-django-plotly/

15. Fixed Timezone issues - now() with DateTimeField in model.
USE_TZ is active in settings.py

Solution
1. Use now from timezone and
2. Use .%f%z in strftime.

    now = timezone.now()
    lastrefd_module = module_name
    # fixed timezone issue
    lastrefd_date = now.strftime("%Y-%m-%d %H:%M:%S.%f%z")

16.